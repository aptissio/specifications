{
  "type": "supplier",
  "supplier": "aptissio",
  "name": "/data/add/html-style/named-constant-combination/x64",
  "description": [
    "Add a new HTML style.",
    "<i>style A and style B</i> are Selector elements within a CSS style sheet. These may be combined using combinators to apply styling properties in a few different methods.",
    "",
    "Apply a <i>Combinator type</i> to a Named Selector. Select a Combinator by choosing an integer (1-5) that represents the desired type accordingly shown below.",
    "",
    "    1. \" \"  (Descendant)",
    "    2. \">\"  (Child)",
    "    3. \"~\"  (General Sibling)",
    "    4. \"+\"  (Adjacent Sibling) ",
    "    5. \"\"  (Multiples) ",
    "    6. \",\"  (Selector List)",
    " ",
    "    [1, 2, 3, 4, 5, 6] -> COMB0_1SPACE , COMBO_2GREATERTHAN, COMBO_3WAVE, COMBO_4PLUS, COMBO_5NOSPACE, COMBO_COMMA",
    "",
    "",
    "Child - selects nodes that are direct children of the first element.",
    "",
    "General Sibling - selects siblings. This means that the second element follows the first (though not necessarily immediately),and both share the same parent.",
    "",
    "Adjacent Sibling - selects adjacent siblings. This means that the second element directly follows the first, and both share the same parent.",
    "",
    "Descendant - The (space) combinator selects nodes that are descendants of the first element.",
    "",
    "Multiples - Target elements that have combinations of classes and IDs by stringing those selectors together without spaces.",
    "",
    "Selector List - You can combine these into a selector list, by adding a comma between them.",
    "",
    "Learn more...https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors/Combinators"
  ],
  "requirements": [
    {
      "type": "abstraction",
      "name": "html document",
      "protocol": "/data/html-document/default/x64"
    },
    {
      "type": "string",
      "name": "name",
      "length": "10000",
      "hint": "10000"
    },
    {
      "type": "abstraction",
      "name": "style A handle",
      "protocol": "/data/integer/default/x64"
    },
    {
      "type": "abstraction",
      "name": "style B handle",
      "protocol": "/data/integer/default/x64"
    },
    {
      "type": "integer",
      "name": "combination type",
      "minimum": "1",
      "maximum": "6",
      "hint": "1, 6"
    }
  ],
  "obligations": [
    {
      "type": "abstraction",
      "name": "style handle",
      "protocol": "/data/integer/default/x64"
    }
  ]
}
