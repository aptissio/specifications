{
  "type": "protocol",
  "policy": 0,
  "name": "/data/bitcoin-public-key-store/default/x64",
  "description": [
    "type here to preview description"
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "target account number",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target key chain index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target key index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup create if not exist flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup keystore procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore public key",
        "protocol": "/data/finite-field-elliptic-curve-point/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore public key hash",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore SEC public key",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore bitcoin address",
        "protocol": "/data/bitcoin-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore cash address",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target SEC public key",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup SEC public key procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target public key hash",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup public key hash procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target bitcoin address",
        "protocol": "/data/bitcoin-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup bitcoin address procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target cash address",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup cash address procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result account number",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result key chain index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result key store index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result found flag",
        "protocol": "/data/flag/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "maximum account number",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "maximum key chain index",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/bitcoin-public-key-store/default/x64"
      }
    ],
    "macro": [
      "def (acs, target_account_number, target_key_chain_index, target_key_index, lookup_create_if_not_exist_flag_, lookup_keystore_procedure, keystore_public_key, keystore_public_key_hash, keystore_SEC_public_key_, keystore_bitcoin_address, keystore_cash_address, target_SEC_public_key_, lookup_SEC_public_key_procedure, target_public_key_hash, lookup_public_key_hash_procedure, target_bitcoin_address, lookup_bitcoin_address_procedure, target_cash_address, lookup_cash_address_procedure, result_account_number, result_key_chain_index, result_key_store_index, result_found_flag, maximum_account_number, maximum_key_chain_index, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_account_number, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_key_chain_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_key_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_create_if_not_exist_flag_, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_keystore_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, keystore_public_key, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, keystore_public_key_hash, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, keystore_SEC_public_key_, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, keystore_bitcoin_address, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, keystore_cash_address, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_SEC_public_key_, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_SEC_public_key_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_public_key_hash, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_public_key_hash_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_bitcoin_address, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_bitcoin_address_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_cash_address, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_cash_address_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, result_account_number, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, result_key_chain_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, result_key_store_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, result_found_flag, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, maximum_account_number, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, maximum_key_chain_index, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "integer",
        "name": "maximum account number",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "maximum key chain index",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/bitcoin-public-key-store/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "target account number",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target key chain index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target key index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup create if not exist flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup keystore procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore public key",
        "protocol": "/data/finite-field-elliptic-curve-point/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore public key hash",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore SEC public key",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore bitcoin address",
        "protocol": "/data/bitcoin-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "keystore cash address",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target SEC public key",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup SEC public key procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target public key hash",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup public key hash procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target bitcoin address",
        "protocol": "/data/bitcoin-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup bitcoin address procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target cash address",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup cash address procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result account number",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result key chain index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result key store index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result found flag",
        "protocol": "/data/flag/default/x64"
      }
    ],
    "macro": [
      "def (acs, maximum_account_number, maximum_key_chain_index, self, target_account_number, target_key_chain_index, target_key_index, lookup_create_if_not_exist_flag_, lookup_keystore_procedure, keystore_public_key, keystore_public_key_hash, keystore_SEC_public_key_, keystore_bitcoin_address, keystore_cash_address, target_SEC_public_key_, lookup_SEC_public_key_procedure, target_public_key_hash, lookup_public_key_hash_procedure, target_bitcoin_address, lookup_bitcoin_address_procedure, target_cash_address, lookup_cash_address_procedure, result_account_number, result_key_chain_index, result_key_store_index, result_found_flag,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_account_number, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_key_chain_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_key_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_create_if_not_exist_flag_, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_keystore_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, keystore_public_key, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, keystore_public_key_hash, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, keystore_SEC_public_key_, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, keystore_bitcoin_address, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, keystore_cash_address, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_SEC_public_key_, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_SEC_public_key_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_public_key_hash, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_public_key_hash_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_bitcoin_address, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_bitcoin_address_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_cash_address, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_cash_address_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, result_account_number, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, result_key_chain_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, result_key_store_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, result_found_flag, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, maximum_account_number, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, maximum_key_chain_index, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
