{"name": "/data/bitcoin-mnemonic-dictionary/default/x64",
"type": "protocol",
"policy":"0",
"description":[""],
"host": {
"requirements": [
{"name":  "index maximum ",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "word length maximum",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "dictionary index",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "lookup word by index proc",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "dictionary word",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "target index word",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "lookup index by word proc",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "index number",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "lookup success",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "lookup failure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"}
],
"obligations": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/bitcoin-mnemonic-dictionary/default/x64"}
], 
"macro":  ["def (acs, index_maximum_, word_length_maximum, dictionary_index, lookup_word_by_index_proc, dictionary_word, target_index_word, lookup_index_by_word_proc, index_number, lookup_success, lookup_failure, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/dictate/agent-integer/default/x64@codevalley(acs, $, index_maximum_, trigger, debug_msg)",
"sub /behaviour/dictate/agent-integer/default/x64@codevalley(acs, $, word_length_maximum, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, dictionary_index, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, lookup_word_by_index_proc, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, dictionary_word, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, target_index_word, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, lookup_index_by_word_proc, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, index_number, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, lookup_success, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, lookup_failure, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/bitcoin-mnemonic-dictionary/default/x64"}
],
"obligations": [
{"name":  "index maximum ",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "word length maximum",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "dictionary index",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "lookup word by index proc",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "dictionary word",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "target index word",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "lookup index by word proc",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "index number",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "lookup success",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "lookup failure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"}
],
"macro":  ["def (acs, self, index_maximum_, word_length_maximum, dictionary_index, lookup_word_by_index_proc, dictionary_word, target_index_word, lookup_index_by_word_proc, index_number, lookup_success, lookup_failure,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/accept/agent-integer/default/x64@codevalley(acs, $, index_maximum_, trigger, debug_msg)",
"sub /behaviour/accept/agent-integer/default/x64@codevalley(acs, $, word_length_maximum, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, dictionary_index, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, lookup_word_by_index_proc, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, dictionary_word, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, target_index_word, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, lookup_index_by_word_proc, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, index_number, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, lookup_success, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, lookup_failure, trigger, debug_msg)",
"}",
"end"]
}
}
