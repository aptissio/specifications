{
  "type": "protocol",
  "policy": 0,
  "name": "/data/bitcoin-network-connection-metrics/default/x64",
  "description": [
    ""
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "target connection ID",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "connection map",
        "protocol": "/data/sorted-map/default/x64"
      },
      {
        "type": "abstraction",
        "name": "connection ID",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "remote address",
        "protocol": "/data/network-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "outbound",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "time connected",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "time last received data",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "time last sent data",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "cummulative bytes received",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "cummulative bytes sent",
        "protocol": "/data/integer/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/data/bitcoin-network-connection-metrics/default/x64"
      }
    ],
    "macro": [
      "def(acs, target_connection_ID, connection_map, connection_ID, remote_address, outbound, time_connected, time_last_received_data, time_last_sent_data, cummulative_bytes_received, cummulative_bytes_sent, bitcoin_network_connection_metrics_inout, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, bitcoin_network_connection_metrics_inout, trigger, debug_msg) -> {",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_connection_ID, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, connection_map, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, connection_ID, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, remote_address, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, outbound, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, time_connected, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, time_last_received_data, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, time_last_sent_data, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, cummulative_bytes_received, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, cummulative_bytes_sent, trigger, debug_msg)",
      "}",
      "end "
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/data/bitcoin-network-connection-metrics/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "target connection ID",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "connection map",
        "protocol": "/data/sorted-map/default/x64"
      },
      {
        "type": "abstraction",
        "name": "connection ID",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "remote address",
        "protocol": "/data/network-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "outbound",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "time connected",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "time last received data",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "time last sent data",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "cummulative bytes received",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "cummulative bytes sent",
        "protocol": "/data/integer/default/x64"
      }
    ],
    "macro": [
      "def(acs, bitcoin_network_connection_metrics_inout, target_connection_ID, connection_map, connection_ID, remote_address, outbound, time_connected, time_last_received_data, time_last_sent_data, cummulative_bytes_received, cummulative_bytes_sent, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, bitcoin_network_connection_metrics_inout, trigger, debug_msg) -> {",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_connection_ID, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, connection_map, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, connection_ID, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, remote_address, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, outbound, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, time_connected, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, time_last_received_data, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, time_last_sent_data, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, cummulative_bytes_received, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, cummulative_bytes_sent, trigger, debug_msg)",
      "}",
      "end "
    ]
  }
}
