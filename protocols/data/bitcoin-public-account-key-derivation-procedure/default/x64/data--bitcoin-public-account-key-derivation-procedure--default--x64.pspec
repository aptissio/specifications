{
  "type": "protocol",
  "policy": 0,
  "name": "/data/bitcoin-public-account-key-derivation-procedure/default/x64",
  "description": [
    "type here to preview description"
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "account number",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "hardened key flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "public account key derivation procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "derived key success flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "derived public key",
        "protocol": "/data/bitcoin-extended-public-key/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/bitcoin-public-account-key-derivation-procedure/default/x64"
      }
    ],
    "macro": [
      "def (acs, account_number, hardened_key_flag, public_account_key_derivation_procedure, derived_key_success_flag, derived_public_key, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, account_number, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, hardened_key_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, public_account_key_derivation_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, derived_key_success_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, derived_public_key, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/bitcoin-public-account-key-derivation-procedure/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "account number",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "hardened key flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "public account key derivation procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "derived key success flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "derived public key",
        "protocol": "/data/bitcoin-extended-public-key/default/x64"
      }
    ],
    "macro": [
      "def (acs, self, account_number, hardened_key_flag, public_account_key_derivation_procedure, derived_key_success_flag, derived_public_key,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, account_number, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, hardened_key_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, public_account_key_derivation_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, derived_key_success_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, derived_public_key, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
