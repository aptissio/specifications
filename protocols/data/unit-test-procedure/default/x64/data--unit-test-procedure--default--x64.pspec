{
  "type": "protocol",
  "policy": 0,
  "name": "/data/unit-test-procedure/default/x64",
  "description": [
    "type here to preview description"
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "test title",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "run test flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "set run test flag",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test init procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test run procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test result flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test cleanup procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "failure debug procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test success procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test failure procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "case init",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "register test procedure",
        "protocol": "/data/procedure/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "test title  max len",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/unit-test-procedure/default/x64"
      }
    ],
    "macro": [
      "def (acs, test_title, run_test_flag, set_run_test_flag, test_init_procedure, test_run_procedure, test_result_flag, test_cleanup_procedure, failure_debug_procedure, test_success_procedure, test_failure_procedure, case_init, register_test_procedure, test_title__max_len, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, test_title, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, run_test_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, set_run_test_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, test_init_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, test_run_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, test_result_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, test_cleanup_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, failure_debug_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, test_success_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, test_failure_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, case_init, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, register_test_procedure, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, test_title__max_len, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "integer",
        "name": "test title  max len",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/unit-test-procedure/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "test title",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "run test flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "set run test flag",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test init procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test run procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test result flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test cleanup procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "failure debug procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test success procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "test failure procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "case init",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "register test procedure",
        "protocol": "/data/procedure/default/x64"
      }
    ],
    "macro": [
      "def (acs, test_title__max_len, self, test_title, run_test_flag, set_run_test_flag, test_init_procedure, test_run_procedure, test_result_flag, test_cleanup_procedure, failure_debug_procedure, test_success_procedure, test_failure_procedure, case_init, register_test_procedure,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, test_title, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, run_test_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, set_run_test_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, test_init_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, test_run_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, test_result_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, test_cleanup_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, failure_debug_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, test_success_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, test_failure_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, case_init, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, register_test_procedure, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, test_title__max_len, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
