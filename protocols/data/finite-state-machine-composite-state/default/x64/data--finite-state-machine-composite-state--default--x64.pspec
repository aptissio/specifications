{"name": "/data/finite-state-machine-composite-state/default/x64",
"type": "protocol",
"policy":"0",
"description":[""],
"host": {
"requirements": [
{"name":  "composite state id",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "composite fsm",
"type": "abstraction",
"protocol": "/data/finite-state-machine/default/x64"},
{"name":  "fsm variable",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "fsm variable initialise",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm variable cleanup",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm reset",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "transition event id",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "unhandled event notification",
"type": "abstraction",
"protocol": "/data/flow/default/x64"}
],
"obligations": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/finite-state-machine-composite-state/default/x64"}
], 
"macro":  ["def (acs, composite_state_id, composite_fsm, fsm_variable, fsm_variable_initialise, fsm_variable_cleanup, fsm_reset, transition_event_id, unhandled_event_notification, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/dictate/agent-integer/default/x64@codevalley(acs, $, composite_state_id, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, composite_fsm, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_variable, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_variable_initialise, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_variable_cleanup, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_reset, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, transition_event_id, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, unhandled_event_notification, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/finite-state-machine-composite-state/default/x64"}
],
"obligations": [
{"name":  "composite state id",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "composite fsm",
"type": "abstraction",
"protocol": "/data/finite-state-machine/default/x64"},
{"name":  "fsm variable",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "fsm variable initialise",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm variable cleanup",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm reset",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "transition event id",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "unhandled event notification",
"type": "abstraction",
"protocol": "/data/flow/default/x64"}
],
"macro":  ["def (acs, self, composite_state_id, composite_fsm, fsm_variable, fsm_variable_initialise, fsm_variable_cleanup, fsm_reset, transition_event_id, unhandled_event_notification,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/accept/agent-integer/default/x64@codevalley(acs, $, composite_state_id, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, composite_fsm, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_variable, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_variable_initialise, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_variable_cleanup, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_reset, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, transition_event_id, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, unhandled_event_notification, trigger, debug_msg)",
"}",
"end"]
}
}
