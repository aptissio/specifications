{
  "type": "protocol",
  "policy": 0,
  "name": "/data/bluetooth-address/default/x64",
  "description": [
    ""
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "mac address",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "channel",
        "protocol": "/data/integer/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/data/bluetooth-address/default/x64"
      }
    ],
    "macro": [
      "def(acs, address, channel, chain_inout, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, chain_inout, trigger, debug_msg) -> {",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, address, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, channel, trigger, debug_msg)",
      "  }",
      "end "
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/data/bluetooth-address/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "mac address",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "channel",
        "protocol": "/data/integer/default/x64"
      }
    ],
    "macro": [
      "def(acs, chain_inout, address, channel, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, chain_inout, trigger, debug_msg) -> {",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, address, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, channel, trigger, debug_msg)",
      "  }",
      "end "
    ]
  }
}
