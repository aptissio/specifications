{
  "type": "protocol",
  "policy": 0,
  "name": "/data/file-permissions/default/x64",
  "description": [
    "Design a collection of permissions for user, group and other access."
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "user read",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "user write",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "user execute",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "group read",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "group write",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "group execute",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "other read",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "other write",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "other execute",
        "protocol": "/data/flag/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/file-permissions/default/x64"
      }
    ],
    "macro": [
      "def (acs, user_read, user_write, user_execute, group_read, group_write, group_execute, other_read, other_write, other_execute, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, user_read, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, user_write, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, user_execute, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, group_read, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, group_write, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, group_execute, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, other_read, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, other_write, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, other_execute, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/file-permissions/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "user read",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "user write",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "user execute",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "group read",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "group write",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "group execute",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "other read",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "other write",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "other execute",
        "protocol": "/data/flag/default/x64"
      }
    ],
    "macro": [
      "def (acs, self, user_read, user_write, user_execute, group_read, group_write, group_execute, other_read, other_write, other_execute,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, user_read, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, user_write, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, user_execute, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, group_read, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, group_write, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, group_execute, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, other_read, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, other_write, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, other_execute, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
