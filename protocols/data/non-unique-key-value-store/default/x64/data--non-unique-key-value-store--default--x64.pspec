{"name": "/data/non-unique-key-value-store/default/x64",
"type": "protocol",
"policy":"0",
"description":["Protocol for the non-unique key-value pairs storage. It provides the target key and value and found key and value bytesequences for PEERS to work with in each or success procedure and empty or failure procedures.",
"",
"The add or iterate procedures provide mechanismus to add to or to iterate over the store. If the delete flag is set in each procedure, the value will be deleted. If the stop flag gets set in each procedure, the itteration will stop.",
"",
"The "],
"host": {
"requirements": [
{"name":  "target key",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "target value",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "found key",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "found value",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "add procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "iterate procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "each or success procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "empty or failure procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "delete flag",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "stop flag",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "case insensitive search",
"type": "boolean"}
],
"obligations": [
{"name":  "key length maximum",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "value length maximum",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/non-unique-key-value-store/default/x64"}
], 
"macro":  ["def (acs, target_key, target_value, found_key, found_value, add_procedure, iterate_procedure, each_or_success_procedure, empty_or_failure_procedure, delete_flag, stop_flag, case_insensitive_search, key_length_maximum, value_length_maximum, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, target_key, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, target_value, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, found_key, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, found_value, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, add_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, iterate_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, each_or_success_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, empty_or_failure_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, delete_flag, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, stop_flag, trigger, debug_msg)",
"sub /behaviour/dictate/agent-boolean/default/x64@codevalley(acs, $, case_insensitive_search, trigger, debug_msg)",
"sub /behaviour/collect/agent-integer/maximum/x64@codevalley(acs, $, key_length_maximum, trigger, debug_msg)",
"sub /behaviour/collect/agent-integer/maximum/x64@codevalley(acs, $, value_length_maximum, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name":  "key length maximum",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "value length maximum",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/non-unique-key-value-store/default/x64"}
],
"obligations": [
{"name":  "target key",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "target value",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "found key",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "found value",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "add procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "iterate procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "each or success procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "empty or failure procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "delete flag",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "stop flag",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "case insensitive search",
"type": "boolean"}
],
"macro":  ["def (acs, key_length_maximum, value_length_maximum, self, target_key, target_value, found_key, found_value, add_procedure, iterate_procedure, each_or_success_procedure, empty_or_failure_procedure, delete_flag, stop_flag, case_insensitive_search,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, target_key, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, target_value, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, found_key, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, found_value, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, add_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, iterate_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, each_or_success_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, empty_or_failure_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, delete_flag, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, stop_flag, trigger, debug_msg)",
"sub /behaviour/accept/agent-boolean/default/x64@codevalley(acs, $, case_insensitive_search, trigger, debug_msg)",
"sub /behaviour/fold/agent-integer/maximum/x64@codevalley(acs, $, key_length_maximum, trigger, debug_msg)",
"sub /behaviour/fold/agent-integer/maximum/x64@codevalley(acs, $, value_length_maximum, trigger, debug_msg)",
"}",
"end"]
}
}
