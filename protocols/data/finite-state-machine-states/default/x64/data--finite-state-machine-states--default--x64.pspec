{"name": "/data/finite-state-machine-states/default/x64",
"type": "protocol",
"policy":"0",
"description":[""],
"host": {
"requirements": [
{"name":  "first state",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "state and transition init",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm variable",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "fsm variable initialise",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm variable cleanup",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm proc state ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "fsm entry  proc",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "fsm exit proc",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "fsm state description",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "register state procs",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"}
],
"obligations": [
{"name":  "state sum",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "last state",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "description len max",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/finite-state-machine-states/default/x64"}
], 
"macro":  ["def (acs, first_state, state_and_transition_init, fsm_variable, fsm_variable_initialise, fsm_variable_cleanup, fsm_proc_state_ID, fsm_entry__proc, fsm_exit_proc, fsm_state_description, register_state_procs, state_sum, last_state, description_len_max, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/collect-and-distribute/agent-integer/default/x64@codevalley(acs, $, first_state, state_sum, trigger, debug_msg)",
"sub /behaviour/collect/agent-integer/maximum/x64@codevalley(acs, $, description_len_max, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, state_and_transition_init, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_variable, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_variable_initialise, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_variable_cleanup, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_proc_state_ID, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_entry__proc, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_exit_proc, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fsm_state_description, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, register_state_procs, trigger, debug_msg)",
"}",
"sub /behaviour/add/agent-integer/default/x64@codevalley( acs, first_state, state_sum, last_state, trigger, debug_msg)",
"end"]
},
"join": {
"requirements": [
{"name":  "state count",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "description len max",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/finite-state-machine-states/default/x64"}
],
"obligations": [
{"name":  "state ID",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name":  "state and transition init",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm variable",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "fsm variable initialise",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm variable cleanup",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "fsm proc state ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "fsm entry  proc",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "fsm exit proc",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "fsm state description",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "register state procs",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"}
],
"macro":  ["def (acs, state_count, description_len_max, self, state_ID, state_and_transition_init, fsm_variable, fsm_variable_initialise, fsm_variable_cleanup, fsm_proc_state_ID, fsm_entry__proc, fsm_exit_proc, fsm_state_description, register_state_procs,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/fold-and-allocate/agent-integer/default/x64@codevalley(acs, $, state_count, state_ID, trigger, debug_msg)",
"sub /behaviour/fold/agent-integer/maximum/x64@codevalley(acs, $, description_len_max, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, state_and_transition_init, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_variable, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_variable_initialise, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_variable_cleanup, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_proc_state_ID, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_entry__proc, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_exit_proc, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fsm_state_description, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, register_state_procs, trigger, debug_msg)",
"}",
"end"]
}
}
