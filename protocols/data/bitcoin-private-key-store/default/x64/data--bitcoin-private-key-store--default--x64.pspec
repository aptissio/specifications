{
  "type": "protocol",
  "policy": 0,
  "name": "/data/bitcoin-private-key-store/default/x64",
  "description": [
    "Bitcoin private key store"
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "lookup account number",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup key chain index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup key index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup keystore procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup create if not exist flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup keystore found flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result account number",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result key chain index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result key store index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "private key",
        "protocol": "/data/unsigned-integer/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "maximum account number",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "maximum key chain index",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/bitcoin-private-key-store/default/x64"
      }
    ],
    "macro": [
      "def (acs, lookup_account_number, lookup_key_chain_index, lookup_key_index, lookup_keystore_procedure, lookup_create_if_not_exist_flag_, lookup_keystore_found_flag, result_account_number, result_key_chain_index, result_key_store_index, private_key, maximum_account_number, maximum_key_chain_index, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_account_number, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_key_chain_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_key_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_keystore_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_create_if_not_exist_flag_, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, lookup_keystore_found_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, result_account_number, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, result_key_chain_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, result_key_store_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, private_key, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, maximum_account_number, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, maximum_key_chain_index, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "integer",
        "name": "maximum account number",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "maximum key chain index",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/bitcoin-private-key-store/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "lookup account number",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup key chain index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup key index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup keystore procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup create if not exist flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup keystore found flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result account number",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result key chain index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result key store index",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "private key",
        "protocol": "/data/unsigned-integer/default/x64"
      }
    ],
    "macro": [
      "def (acs, maximum_account_number, maximum_key_chain_index, self, lookup_account_number, lookup_key_chain_index, lookup_key_index, lookup_keystore_procedure, lookup_create_if_not_exist_flag_, lookup_keystore_found_flag, result_account_number, result_key_chain_index, result_key_store_index, private_key,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_account_number, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_key_chain_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_key_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_keystore_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_create_if_not_exist_flag_, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, lookup_keystore_found_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, result_account_number, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, result_key_chain_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, result_key_store_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, private_key, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, maximum_account_number, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, maximum_key_chain_index, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
