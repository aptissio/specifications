{
  "type": "protocol",
  "policy": 0,
  "name": "/data/bitcoin-script-opcode/default/x64",
  "description": [
    ""
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "opcode choice",
        "protocol": "/data/unpack/default/x64"
      },
      {
        "type": "abstraction",
        "name": "processing signature script",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "script valid",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "stack bytesequence",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "stack integer",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "push bytesequence",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "pop bytesequence",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "push integer",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "pop integer",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peek bytesequence",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peek integer",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peek depth",
        "protocol": "/data/integer/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "required opcode count",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/bitcoin-script-opcode/default/x64"
      }
    ],
    "macro": [
      "def (acs, opcode_choice, processing_signature_script, script_valid, stack_bytesequence, stack_integer, push_bytesequence, pop_bytesequence, push_integer, pop_integer, peek_bytesequence, peek_integer, peek_depth, required_opcode_count, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, opcode_choice, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, processing_signature_script, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, script_valid, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, stack_bytesequence, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, stack_integer, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, push_bytesequence, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, pop_bytesequence, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, push_integer, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, pop_integer, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, peek_bytesequence, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, peek_integer, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, peek_depth, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/default/x64@codevalley( acs, $, required_opcode_count, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "integer",
        "name": "required opcode count",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/bitcoin-script-opcode/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "opcode choice",
        "protocol": "/data/unpack/default/x64"
      },
      {
        "type": "abstraction",
        "name": "processing signature script",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "script valid",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "stack bytesequence",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "stack integer",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "push bytesequence",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "pop bytesequence",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "push integer",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "pop integer",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peek bytesequence",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peek integer",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peek depth",
        "protocol": "/data/integer/default/x64"
      }
    ],
    "macro": [
      "def (acs, required_opcode_count, self, opcode_choice, processing_signature_script, script_valid, stack_bytesequence, stack_integer, push_bytesequence, pop_bytesequence, push_integer, pop_integer, peek_bytesequence, peek_integer, peek_depth,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, opcode_choice, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, processing_signature_script, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, script_valid, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, stack_bytesequence, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, stack_integer, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, push_bytesequence, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, pop_bytesequence, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, push_integer, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, pop_integer, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, peek_bytesequence, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, peek_integer, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, peek_depth, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/default/x64@codevalley( acs, $, required_opcode_count, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
