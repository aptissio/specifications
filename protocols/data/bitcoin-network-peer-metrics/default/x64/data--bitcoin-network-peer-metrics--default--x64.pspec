{"name": "/data/bitcoin-network-peer-metrics/default/x64",
"type": "protocol",
"policy":"0",
"description":[""],
"host": {
"requirements": [
{"name":  "target peer id",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metrics",
"type": "abstraction",
"protocol": "/data/binary-search-tree/default/x64"},
{"name":  "metric peer id",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric network address",
"type": "abstraction",
"protocol": "/data/network-address/default/x64"},
{"name":  "metric outbound",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "metric protocol version",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric services",
"type": "abstraction",
"protocol": "/data/bit-array/default/x64"},
{"name":  "metric user agent",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "metric tx network address",
"type": "abstraction",
"protocol": "/data/ipv6-socket-address/default/x64"},
{"name":  "metric rx network address",
"type": "abstraction",
"protocol": "/data/ipv6-socket-address/default/x64"},
{"name":  "metric transaction relay",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "metric connection time",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric block height",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric synced header count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric synced block count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric persistent",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "metric whitelist",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "metric ban score",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric ping time",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric peer status",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "active peer count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "active inbound peer count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "active outbound peer count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "peer added or removed",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "peer ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "peer added (peer ID)",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "peer removed (peer ID)",
"type": "abstraction",
"protocol": "/data/flow/default/x64"}
],
"obligations": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/bitcoin-network-peer-metrics/default/x64"}
], 
"macro":  ["def (acs, target_peer_id, metrics, metric_peer_id, metric_network_address, metric_outbound, metric_protocol_version, metric_services, metric_user_agent, metric_tx_network_address, metric_rx_network_address, metric_transaction_relay, metric_connection_time, metric_block_height, metric_synced_header_count, metric_synced_block_count, metric_persistent, metric_whitelist, metric_ban_score, metric_ping_time, metric_peer_status, active_peer_count, active_inbound_peer_count, active_outbound_peer_count, peer_added_or_removed, peer_ID, peer_added__peer_ID_, peer_removed__peer_ID_, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, target_peer_id, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metrics, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_peer_id, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_network_address, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_outbound, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_protocol_version, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_services, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_user_agent, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_tx_network_address, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_rx_network_address, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_transaction_relay, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_connection_time, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_block_height, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_synced_header_count, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_synced_block_count, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_persistent, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_whitelist, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_ban_score, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_ping_time, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, metric_peer_status, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, active_peer_count, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, active_inbound_peer_count, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, active_outbound_peer_count, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, peer_added_or_removed, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, peer_ID, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, peer_added__peer_ID_, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, peer_removed__peer_ID_, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/bitcoin-network-peer-metrics/default/x64"}
],
"obligations": [
{"name":  "target peer id",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metrics",
"type": "abstraction",
"protocol": "/data/binary-search-tree/default/x64"},
{"name":  "metric peer id",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric network address",
"type": "abstraction",
"protocol": "/data/network-address/default/x64"},
{"name":  "metric outbound",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "metric protocol version",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric services",
"type": "abstraction",
"protocol": "/data/bit-array/default/x64"},
{"name":  "metric user agent",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "metric tx network address",
"type": "abstraction",
"protocol": "/data/ipv6-socket-address/default/x64"},
{"name":  "metric rx network address",
"type": "abstraction",
"protocol": "/data/ipv6-socket-address/default/x64"},
{"name":  "metric transaction relay",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "metric connection time",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric block height",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric synced header count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric synced block count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric persistent",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "metric whitelist",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "metric ban score",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric ping time",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "metric peer status",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "active peer count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "active inbound peer count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "active outbound peer count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "peer added or removed",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "peer ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "peer added (peer ID)",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "peer removed (peer ID)",
"type": "abstraction",
"protocol": "/data/flow/default/x64"}
],
"macro":  ["def (acs, self, target_peer_id, metrics, metric_peer_id, metric_network_address, metric_outbound, metric_protocol_version, metric_services, metric_user_agent, metric_tx_network_address, metric_rx_network_address, metric_transaction_relay, metric_connection_time, metric_block_height, metric_synced_header_count, metric_synced_block_count, metric_persistent, metric_whitelist, metric_ban_score, metric_ping_time, metric_peer_status, active_peer_count, active_inbound_peer_count, active_outbound_peer_count, peer_added_or_removed, peer_ID, peer_added__peer_ID_, peer_removed__peer_ID_,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, target_peer_id, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metrics, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_peer_id, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_network_address, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_outbound, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_protocol_version, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_services, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_user_agent, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_tx_network_address, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_rx_network_address, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_transaction_relay, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_connection_time, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_block_height, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_synced_header_count, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_synced_block_count, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_persistent, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_whitelist, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_ban_score, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_ping_time, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, metric_peer_status, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, active_peer_count, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, active_inbound_peer_count, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, active_outbound_peer_count, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, peer_added_or_removed, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, peer_ID, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, peer_added__peer_ID_, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, peer_removed__peer_ID_, trigger, debug_msg)",
"}",
"end"]
}
}
