{
  "type": "protocol",
  "policy": 0,
  "name": "/data/json-rpc-interface/default/x64",
  "description": [
    "/data/json-rpc-interface associates data required to operate a json-rpc interface.",
    "The JSON RPC Interface is a data collection that is used to send RPC methods and process RPC results."
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "method",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "parameter array",
        "protocol": "/data/array/default/x64"
      },
      {
        "type": "abstraction",
        "name": "parameter",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "error code",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "error message",
        "protocol": "/data/bytesequence/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/data/json-rpc-interface/default/x64"
      }
    ],
    "macro": [
      "def(acs, method, array, parameter, result, code, msg, chain_inout, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, chain_inout, trigger, debug_msg) -> {",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, method, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, array, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, parameter, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, result, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, code, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, msg, trigger, debug_msg)",
      "  }",
      "end "
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/data/json-rpc-interface/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "method",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "parameter array",
        "protocol": "/data/array/default/x64"
      },
      {
        "type": "abstraction",
        "name": "parameter",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "result",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "error code",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "error message",
        "protocol": "/data/bytesequence/default/x64"
      }
    ],
    "macro": [
      "def(acs, chain_inout, method, array, parameter, result, code, msg, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, chain_inout, trigger, debug_msg) -> {",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, method, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, array, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, parameter, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, result, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, code, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, msg, trigger, debug_msg)",
      "  }",
      "end "
    ]
  }
}
