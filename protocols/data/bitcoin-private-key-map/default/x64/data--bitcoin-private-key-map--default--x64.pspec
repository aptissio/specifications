{
  "type": "protocol",
  "policy": 0,
  "name": "/data/bitcoin-private-key-map/default/x64",
  "description": [
    ""
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "target public key hash",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "private key map",
        "protocol": "/data/sorted-map/default/x64"
      },
      {
        "type": "abstraction",
        "name": "public key hash",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "extended private key",
        "protocol": "/data/bitcoin-extended-private-key/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/data/bitcoin-private-key-map/default/x64"
      }
    ],
    "macro": [
      "def(acs, target_public_key_hash, private_key_map, public_key_hash, extended_private_key, bitcoin_private_key_map_inout, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, bitcoin_private_key_map_inout, trigger, debug_msg) -> {",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_public_key_hash, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, private_key_map, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, public_key_hash, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, extended_private_key, trigger, debug_msg)",
      "}",
      "end "
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/data/bitcoin-private-key-map/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "target public key hash",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "private key map",
        "protocol": "/data/sorted-map/default/x64"
      },
      {
        "type": "abstraction",
        "name": "public key hash",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "extended private key",
        "protocol": "/data/bitcoin-extended-private-key/default/x64"
      }
    ],
    "macro": [
      "def(acs, bitcoin_private_key_map_inout, target_public_key_hash, private_key_map, public_key_hash, extended_private_key, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, bitcoin_private_key_map_inout, trigger, debug_msg) -> {",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_public_key_hash, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, private_key_map, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, public_key_hash, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, extended_private_key, trigger, debug_msg)",
      "}",
      "end "
    ]
  }
}
