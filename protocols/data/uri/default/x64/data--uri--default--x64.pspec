{
  "type": "protocol",
  "policy": 0,
  "name": "/data/uri/default/x64",
  "description": [
    "URI - Uniform Resource Identifier",
    "",
    "Protocol to design URI according to URI specification.",
    "",
    "URI is always in precentage encoded format according to specification.",
    "",
    "The `scheme` and `path` are required. `path` can be empty.",
    "",
    "`authority`, `query` and `fragment` are optional. If the `authority` is set, it can be empty, the flag `uri with authority` specifies if the authority is present."
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "scheme",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "uri with authority",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "authority",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "path",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "query",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "fragment",
        "protocol": "/data/bytesequence/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/uri/default/x64"
      }
    ],
    "macro": [
      "def (acs, scheme, uri_with_authority, authority, path, query, fragment, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, scheme, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, uri_with_authority, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, authority, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, path, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, query, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, fragment, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/data/uri/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "scheme",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "uri with authority",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "authority",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "path",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "query",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "fragment",
        "protocol": "/data/bytesequence/default/x64"
      }
    ],
    "macro": [
      "def (acs, self, scheme, uri_with_authority, authority, path, query, fragment,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, scheme, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, uri_with_authority, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, authority, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, path, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, query, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, fragment, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
