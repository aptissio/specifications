{"name": "/data/http-form-parameter-decoder/default/x64",
"type": "protocol",
"policy":"0",
"description":["This protocol hosts the decoded parameters from the http-request.",
"",
"The `non unique key value store` is used to store the key-value pairs.",
"",
"The `unique-identifier-scope` is used to provede unique names for the parameters.",
"",
"`context` is the context where the http-parameters are stored.",
"",
"`context work` is place where only work to be done is to get the values from `non unique key value store` and store them in your context. Any other work may cause undefined behaviour of your application.",
"",
"`context clean up` is space to clean up the context variables if needed. Providing any other work it this flow may result in undefined behaviour of your application."],
"host": {
"requirements": [
{"name":  "non unique key value store",
"type": "abstraction",
"protocol": "/data/non-unique-key-value-store/default/x64"},
{"name":  "unique identifier scope",
"type": "abstraction",
"protocol": "/data/unique-identifier-scope/default/x64"},
{"name":  "context",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "context work",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "context clean up",
"type": "abstraction",
"protocol": "/data/flow/default/x64"}
],
"obligations": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/http-form-parameter-decoder/default/x64"}
], 
"macro":  ["def (acs, non_unique_key_value_store, unique_identifier_scope, context, context_work, context_clean_up, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, non_unique_key_value_store, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, unique_identifier_scope, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, context, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, context_work, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, context_clean_up, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/data/http-form-parameter-decoder/default/x64"}
],
"obligations": [
{"name":  "non unique key value store",
"type": "abstraction",
"protocol": "/data/non-unique-key-value-store/default/x64"},
{"name":  "unique identifier scope",
"type": "abstraction",
"protocol": "/data/unique-identifier-scope/default/x64"},
{"name":  "context",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "context work",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "context clean up",
"type": "abstraction",
"protocol": "/data/flow/default/x64"}
],
"macro":  ["def (acs, self, non_unique_key_value_store, unique_identifier_scope, context, context_work, context_clean_up,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, non_unique_key_value_store, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, unique_identifier_scope, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, context, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, context_work, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, context_clean_up, trigger, debug_msg)",
"}",
"end"]
}
}
