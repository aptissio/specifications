{
  "type": "protocol",
  "policy": 0,
  "name": "/system/bitcoin-transaction-event/default/x64",
  "description": [
    ""
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "transaction events",
        "protocol": "/system/event-process/default/x64"
      },
      {
        "type": "abstraction",
        "name": "transaction time",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "transaction",
        "protocol": "/data/bitcoin-transaction/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "requested transaction input capacity",
        "minimum": "1",
        "maximum": "1024",
        "hint": "1 to 1024"
      },
      {
        "type": "integer",
        "name": "requested transaction output capacity",
        "minimum": "1",
        "maximum": "1024",
        "hint": "1 to 1024"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/system/bitcoin-transaction-event/default/x64"
      }
    ],
    "macro": [
      "def (acs, transaction_events, transaction_time, transaction, requested_transaction_input_capacity, requested_transaction_output_capacity, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, transaction_events, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, transaction_time, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, transaction, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, requested_transaction_input_capacity, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, requested_transaction_output_capacity, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "integer",
        "name": "requested transaction input capacity",
        "minimum": "1",
        "maximum": "1024",
        "hint": "1 to 1024"
      },
      {
        "type": "integer",
        "name": "requested transaction output capacity",
        "minimum": "1",
        "maximum": "1024",
        "hint": "1 to 1024"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/system/bitcoin-transaction-event/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "transaction events",
        "protocol": "/system/event-process/default/x64"
      },
      {
        "type": "abstraction",
        "name": "transaction time",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "transaction",
        "protocol": "/data/bitcoin-transaction/default/x64"
      }
    ],
    "macro": [
      "def (acs, requested_transaction_input_capacity, requested_transaction_output_capacity, self, transaction_events, transaction_time, transaction,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, transaction_events, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, transaction_time, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, transaction, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, requested_transaction_input_capacity, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, requested_transaction_output_capacity, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
