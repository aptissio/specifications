{"name": "/system/peer-communications/default/x64",
"type": "protocol",
"policy":"0",
"description":[""],
"host": {
"requirements": [
{"name":  "global initialisation",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "peer comms available",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "local peer ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "receive data peer ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "receive data choices",
"type": "abstraction",
"protocol": "/data/unpack/default/x64"},
{"name":  "send data peer ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send data token in",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send data",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "send data callback procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send data procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send data callback token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send data callback result code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "event type",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "event peer id",
"type": "abstraction",
"protocol": "/data/integer/default/x64"}
],
"obligations": [
{"name":  "send data maximum length",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/peer-communications/default/x64"}
], 
"macro":  ["def (acs, global_initialisation, peer_comms_available, local_peer_ID, receive_data_peer_ID, receive_data_choices, send_data_peer_ID, send_data_token_in, send_data, send_data_callback_procedure, send_data_procedure, send_data_callback_token, send_data_callback_result_code, event, event_type, event_peer_id, send_data_maximum_length, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, global_initialisation, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, peer_comms_available, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, local_peer_ID, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, receive_data_peer_ID, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, receive_data_choices, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_data_peer_ID, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_data_token_in, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_data, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_data_callback_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_data_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_data_callback_token, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_data_callback_result_code, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, event, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, event_type, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, event_peer_id, trigger, debug_msg)",
"sub /behaviour/collect/agent-integer/maximum/x64@codevalley(acs, $, send_data_maximum_length, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name":  "send data maximum length",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/peer-communications/default/x64"}
],
"obligations": [
{"name":  "global initialisation",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "peer comms available",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "local peer ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "receive data peer ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "receive data choices",
"type": "abstraction",
"protocol": "/data/unpack/default/x64"},
{"name":  "send data peer ID",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send data token in",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send data",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "send data callback procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send data procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send data callback token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send data callback result code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "event type",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "event peer id",
"type": "abstraction",
"protocol": "/data/integer/default/x64"}
],
"macro":  ["def (acs, send_data_maximum_length, self, global_initialisation, peer_comms_available, local_peer_ID, receive_data_peer_ID, receive_data_choices, send_data_peer_ID, send_data_token_in, send_data, send_data_callback_procedure, send_data_procedure, send_data_callback_token, send_data_callback_result_code, event, event_type, event_peer_id,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, global_initialisation, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, peer_comms_available, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, local_peer_ID, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, receive_data_peer_ID, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, receive_data_choices, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_data_peer_ID, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_data_token_in, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_data, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_data_callback_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_data_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_data_callback_token, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_data_callback_result_code, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, event, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, event_type, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, event_peer_id, trigger, debug_msg)",
"sub /behaviour/fold/agent-integer/maximum/x64@codevalley(acs, $, send_data_maximum_length, trigger, debug_msg)",
"}",
"end"]
}
}