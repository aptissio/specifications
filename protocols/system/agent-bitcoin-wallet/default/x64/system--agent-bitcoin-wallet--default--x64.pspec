{"name": "/system/agent-bitcoin-wallet/default/x64",
"type": "protocol",
"policy":"0",
"description":[""],
"host": {
"requirements": [
{"name":  "initialisation failure",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "wallet",
"type": "abstraction",
"protocol": "/data/bitcoin-wallet/default/x64"},
{"name":  "wallet peer count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "wallet online event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "wallet offline event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "agent keypair index",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "agent change address",
"type": "abstraction",
"protocol": "/data/bitcoin-address/default/x64"},
{"name":  "received coin transaction ID",
"type": "abstraction",
"protocol": "/data/bytes/default/x64"},
{"name":  "received coin output index",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "received coin value",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "received coin is P2PKH",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "received coin public key hash",
"type": "abstraction",
"protocol": "/data/bytes/default/x64"},
{"name":  "received coin address",
"type": "abstraction",
"protocol": "/data/bitcoin-address/default/x64"},
{"name":  "coin received",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "spent coin transaction ID",
"type": "abstraction",
"protocol": "/data/bytes/default/x64"},
{"name":  "spent coin output index",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "coin spent",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "transaction",
"type": "abstraction",
"protocol": "/data/bitcoin-transaction/default/x64"},
{"name":  "send transaction token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send transaction procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send transaction token out",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send transaction result code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send transaction failure reason",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "send transaction callback procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "fund transaction enable locktime",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "fund transaction change address",
"type": "abstraction",
"protocol": "/data/bitcoin-address/default/x64"},
{"name":  "fund transaction procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "fund transaction result code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "fund transaction callback procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "sign txo tree",
"type": "abstraction",
"protocol": "/data/txo-tree/default/x64"},
{"name":  "sign transaction procedure (wallet, txo tree)",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "sign transaction error code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "sign transaction result code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "sign transaction callback procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "sha256 procedure",
"type": "abstraction",
"protocol": "/data/hash-procedure/default/x64"},
{"name":  "ripemd160 procedure",
"type": "abstraction",
"protocol": "/data/hash-procedure/default/x64"},
{"name":  "hmac512 procedure",
"type": "abstraction",
"protocol": "/data/hmac-procedure/default/x64"}
],
"obligations": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/agent-bitcoin-wallet/default/x64"}
], 
"macro":  ["def (acs, initialisation_failure, wallet, wallet_peer_count, wallet_online_event, wallet_offline_event, agent_keypair_index, agent_change_address, received_coin_transaction_ID, received_coin_output_index, received_coin_value, received_coin_is_P2PKH, received_coin_public_key_hash, received_coin_address, coin_received, spent_coin_transaction_ID, spent_coin_output_index, coin_spent, transaction, send_transaction_token, send_transaction_procedure, send_transaction_token_out, send_transaction_result_code, send_transaction_failure_reason, send_transaction_callback_procedure, fund_transaction_enable_locktime, fund_transaction_change_address, fund_transaction_procedure, fund_transaction_result_code, fund_transaction_callback_procedure, sign_txo_tree, sign_transaction_procedure__wallet__txo_tree_, sign_transaction_error_code, sign_transaction_result_code, sign_transaction_callback_procedure, sha256_procedure, ripemd160_procedure, hmac512_procedure, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, initialisation_failure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, wallet, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, wallet_peer_count, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, wallet_online_event, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, wallet_offline_event, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, agent_keypair_index, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, agent_change_address, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, received_coin_transaction_ID, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, received_coin_output_index, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, received_coin_value, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, received_coin_is_P2PKH, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, received_coin_public_key_hash, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, received_coin_address, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, coin_received, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, spent_coin_transaction_ID, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, spent_coin_output_index, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, coin_spent, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, transaction, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_transaction_token, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_transaction_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_transaction_token_out, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_transaction_result_code, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_transaction_failure_reason, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_transaction_callback_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fund_transaction_enable_locktime, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fund_transaction_change_address, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fund_transaction_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fund_transaction_result_code, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, fund_transaction_callback_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, sign_txo_tree, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, sign_transaction_procedure__wallet__txo_tree_, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, sign_transaction_error_code, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, sign_transaction_result_code, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, sign_transaction_callback_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, sha256_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, ripemd160_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, hmac512_procedure, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/agent-bitcoin-wallet/default/x64"}
],
"obligations": [
{"name":  "initialisation failure",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "wallet",
"type": "abstraction",
"protocol": "/data/bitcoin-wallet/default/x64"},
{"name":  "wallet peer count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "wallet online event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "wallet offline event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "agent keypair index",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "agent change address",
"type": "abstraction",
"protocol": "/data/bitcoin-address/default/x64"},
{"name":  "received coin transaction ID",
"type": "abstraction",
"protocol": "/data/bytes/default/x64"},
{"name":  "received coin output index",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "received coin value",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "received coin is P2PKH",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "received coin public key hash",
"type": "abstraction",
"protocol": "/data/bytes/default/x64"},
{"name":  "received coin address",
"type": "abstraction",
"protocol": "/data/bitcoin-address/default/x64"},
{"name":  "coin received",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "spent coin transaction ID",
"type": "abstraction",
"protocol": "/data/bytes/default/x64"},
{"name":  "spent coin output index",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "coin spent",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "transaction",
"type": "abstraction",
"protocol": "/data/bitcoin-transaction/default/x64"},
{"name":  "send transaction token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send transaction procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send transaction token out",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send transaction result code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send transaction failure reason",
"type": "abstraction",
"protocol": "/data/bytesequence/default/x64"},
{"name":  "send transaction callback procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "fund transaction enable locktime",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "fund transaction change address",
"type": "abstraction",
"protocol": "/data/bitcoin-address/default/x64"},
{"name":  "fund transaction procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "fund transaction result code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "fund transaction callback procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "sign txo tree",
"type": "abstraction",
"protocol": "/data/txo-tree/default/x64"},
{"name":  "sign transaction procedure (wallet, txo tree)",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "sign transaction error code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "sign transaction result code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "sign transaction callback procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "sha256 procedure",
"type": "abstraction",
"protocol": "/data/hash-procedure/default/x64"},
{"name":  "ripemd160 procedure",
"type": "abstraction",
"protocol": "/data/hash-procedure/default/x64"},
{"name":  "hmac512 procedure",
"type": "abstraction",
"protocol": "/data/hmac-procedure/default/x64"}
],
"macro":  ["def (acs, self, initialisation_failure, wallet, wallet_peer_count, wallet_online_event, wallet_offline_event, agent_keypair_index, agent_change_address, received_coin_transaction_ID, received_coin_output_index, received_coin_value, received_coin_is_P2PKH, received_coin_public_key_hash, received_coin_address, coin_received, spent_coin_transaction_ID, spent_coin_output_index, coin_spent, transaction, send_transaction_token, send_transaction_procedure, send_transaction_token_out, send_transaction_result_code, send_transaction_failure_reason, send_transaction_callback_procedure, fund_transaction_enable_locktime, fund_transaction_change_address, fund_transaction_procedure, fund_transaction_result_code, fund_transaction_callback_procedure, sign_txo_tree, sign_transaction_procedure__wallet__txo_tree_, sign_transaction_error_code, sign_transaction_result_code, sign_transaction_callback_procedure, sha256_procedure, ripemd160_procedure, hmac512_procedure,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, initialisation_failure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, wallet, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, wallet_peer_count, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, wallet_online_event, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, wallet_offline_event, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, agent_keypair_index, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, agent_change_address, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, received_coin_transaction_ID, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, received_coin_output_index, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, received_coin_value, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, received_coin_is_P2PKH, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, received_coin_public_key_hash, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, received_coin_address, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, coin_received, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, spent_coin_transaction_ID, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, spent_coin_output_index, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, coin_spent, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, transaction, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_transaction_token, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_transaction_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_transaction_token_out, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_transaction_result_code, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_transaction_failure_reason, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_transaction_callback_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fund_transaction_enable_locktime, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fund_transaction_change_address, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fund_transaction_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fund_transaction_result_code, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, fund_transaction_callback_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, sign_txo_tree, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, sign_transaction_procedure__wallet__txo_tree_, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, sign_transaction_error_code, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, sign_transaction_result_code, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, sign_transaction_callback_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, sha256_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, ripemd160_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, hmac512_procedure, trigger, debug_msg)",
"}",
"end"]
}
}
