{"name": "/system/bitcoin-network-customisation/default/x64",
"type": "protocol",
"policy":"0",
"description":[""],
"host": {
"requirements": [
{"name":  "bitcoin network configuration manager",
"type": "abstraction",
"protocol": "/system/configuration-manager/default/x64"},
{"name":  "bitcoin network log manager",
"type": "abstraction",
"protocol": "/system/log-manager/default/x64"},
{"name":  "bitcoin server address",
"type": "abstraction",
"protocol": "/data/network-address/default/x64"},
{"name":  "bitcoin network services",
"type": "abstraction",
"protocol": "/data/bitcoin-network-services/default/x64"},
{"name":  "network available",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "req connection network address",
"type": "abstraction",
"protocol": "/data/network-address/default/x64"},
{"name":  "req connection callback",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "req connection result",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "req connection",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "req disconnect connection token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "req disconnect callback",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "req disconnect result",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "req disconnect",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send connection token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send message",
"type": "abstraction",
"protocol": "/data/bitcoin-network-message/default/x64"},
{"name":  "send callback",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send cb cummulative rx byte count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send cb cummulative tx byte count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "connection event connection token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "connection event code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "connection event epoch",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "connection event remote address",
"type": "abstraction",
"protocol": "/data/network-address/default/x64"},
{"name":  "connection event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "message event connection token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "message event cummulative bytes rx",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "message event cummulative bytes tx",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "message event message",
"type": "abstraction",
"protocol": "/data/bitcoin-network-message/default/x64"},
{"name":  "message event epoch",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "message event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"}
],
"obligations": [
{"name":  "message payload maximum length",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/bitcoin-network-customisation/default/x64"}
], 
"macro":  ["def (acs, bitcoin_network_configuration_manager, bitcoin_network_log_manager, bitcoin_server_address, bitcoin_network_services, network_available, req_connection_network_address, req_connection_callback, req_connection_result, req_connection, req_disconnect_connection_token, req_disconnect_callback, req_disconnect_result, req_disconnect, send_connection_token, send_message, send_callback, send_cb_cummulative_rx_byte_count, send_cb_cummulative_tx_byte_count, send, connection_event_connection_token, connection_event_code, connection_event_epoch, connection_event_remote_address, connection_event, message_event_connection_token, message_event_cummulative_bytes_rx, message_event_cummulative_bytes_tx, message_event_message, message_event_epoch, message_event, message_payload_maximum_length, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, bitcoin_network_configuration_manager, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, bitcoin_network_log_manager, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, bitcoin_server_address, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, bitcoin_network_services, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, network_available, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, req_connection_network_address, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, req_connection_callback, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, req_connection_result, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, req_connection, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, req_disconnect_connection_token, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, req_disconnect_callback, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, req_disconnect_result, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, req_disconnect, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_connection_token, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_message, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_callback, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_cb_cummulative_rx_byte_count, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send_cb_cummulative_tx_byte_count, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, send, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, connection_event_connection_token, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, connection_event_code, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, connection_event_epoch, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, connection_event_remote_address, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, connection_event, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, message_event_connection_token, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, message_event_cummulative_bytes_rx, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, message_event_cummulative_bytes_tx, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, message_event_message, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, message_event_epoch, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, message_event, trigger, debug_msg)",
"sub /behaviour/collect/agent-integer/maximum/x64@codevalley(acs, $, message_payload_maximum_length, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name":  "message payload maximum length",
"type": "integer",
"minimum": "0",
"maximum": "9223372036854775807",
"hint": "0 to (2^63)-1"},
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/bitcoin-network-customisation/default/x64"}
],
"obligations": [
{"name":  "bitcoin network configuration manager",
"type": "abstraction",
"protocol": "/system/configuration-manager/default/x64"},
{"name":  "bitcoin network log manager",
"type": "abstraction",
"protocol": "/system/log-manager/default/x64"},
{"name":  "bitcoin server address",
"type": "abstraction",
"protocol": "/data/network-address/default/x64"},
{"name":  "bitcoin network services",
"type": "abstraction",
"protocol": "/data/bitcoin-network-services/default/x64"},
{"name":  "network available",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "req connection network address",
"type": "abstraction",
"protocol": "/data/network-address/default/x64"},
{"name":  "req connection callback",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "req connection result",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "req connection",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "req disconnect connection token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "req disconnect callback",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "req disconnect result",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "req disconnect",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send connection token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send message",
"type": "abstraction",
"protocol": "/data/bitcoin-network-message/default/x64"},
{"name":  "send callback",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "send cb cummulative rx byte count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send cb cummulative tx byte count",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "send",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "connection event connection token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "connection event code",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "connection event epoch",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "connection event remote address",
"type": "abstraction",
"protocol": "/data/network-address/default/x64"},
{"name":  "connection event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "message event connection token",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "message event cummulative bytes rx",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "message event cummulative bytes tx",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "message event message",
"type": "abstraction",
"protocol": "/data/bitcoin-network-message/default/x64"},
{"name":  "message event epoch",
"type": "abstraction",
"protocol": "/data/integer/default/x64"},
{"name":  "message event",
"type": "abstraction",
"protocol": "/data/flow/default/x64"}
],
"macro":  ["def (acs, message_payload_maximum_length, self, bitcoin_network_configuration_manager, bitcoin_network_log_manager, bitcoin_server_address, bitcoin_network_services, network_available, req_connection_network_address, req_connection_callback, req_connection_result, req_connection, req_disconnect_connection_token, req_disconnect_callback, req_disconnect_result, req_disconnect, send_connection_token, send_message, send_callback, send_cb_cummulative_rx_byte_count, send_cb_cummulative_tx_byte_count, send, connection_event_connection_token, connection_event_code, connection_event_epoch, connection_event_remote_address, connection_event, message_event_connection_token, message_event_cummulative_bytes_rx, message_event_cummulative_bytes_tx, message_event_message, message_event_epoch, message_event,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, bitcoin_network_configuration_manager, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, bitcoin_network_log_manager, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, bitcoin_server_address, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, bitcoin_network_services, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, network_available, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, req_connection_network_address, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, req_connection_callback, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, req_connection_result, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, req_connection, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, req_disconnect_connection_token, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, req_disconnect_callback, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, req_disconnect_result, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, req_disconnect, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_connection_token, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_message, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_callback, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_cb_cummulative_rx_byte_count, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send_cb_cummulative_tx_byte_count, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, send, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, connection_event_connection_token, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, connection_event_code, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, connection_event_epoch, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, connection_event_remote_address, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, connection_event, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, message_event_connection_token, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, message_event_cummulative_bytes_rx, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, message_event_cummulative_bytes_tx, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, message_event_message, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, message_event_epoch, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, message_event, trigger, debug_msg)",
"sub /behaviour/fold/agent-integer/maximum/x64@codevalley(acs, $, message_payload_maximum_length, trigger, debug_msg)",
"}",
"end"]
}
}
