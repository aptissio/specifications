{
  "type": "protocol",
  "policy": 0,
  "name": "/system/file-manager/default/x64",
  "description": [
    "Design a file management system."
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "file manager initialisation",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "task scheduler",
        "protocol": "/system/task-scheduler/default/x64"
      },
      {
        "type": "abstraction",
        "name": "log manager",
        "protocol": "/system/log-manager/default/x64"
      },
      {
        "type": "abstraction",
        "name": "configuration manager",
        "protocol": "/system/configuration-manager/default/x64"
      },
      {
        "type": "abstraction",
        "name": "client token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "auto close",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "filename",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "cursor",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "callback client token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read buffer",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read stop flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read error code",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read error callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "open for read procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write temporary flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write create flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write overwrite flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write truncate flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write permissions",
        "protocol": "/data/file-permissions/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write bytes queued",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write continue flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write queued callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write error code",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write error callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write buffer",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "open for write procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "open file ID",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "opened callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "close file ID",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "file closed callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "close file procedure",
        "protocol": "/data/procedure/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "minimum write buffer capacity",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "minimum read buffer capacity",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/system/file-manager/default/x64"
      }
    ],
    "macro": [
      "def (acs, file_manager_initialisation, task_scheduler, log_manager, configuration_manager, client_token, auto_close, filename, cursor, callback_client_token, read_buffer, read_stop_flag, read_callback_procedure, read_error_code, read_error_callback_procedure, open_for_read_procedure, write_temporary_flag, write_create_flag, write_overwrite_flag, write_truncate_flag, write_permissions, write_bytes_queued, write_continue_flag, write_queued_callback_procedure, write_error_code, write_error_callback_procedure, write_callback_procedure, write_buffer, open_for_write_procedure, open_file_ID, opened_callback_procedure, close_file_ID, file_closed_callback_procedure, close_file_procedure, minimum_write_buffer_capacity, minimum_read_buffer_capacity, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, file_manager_initialisation, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, task_scheduler, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, log_manager, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, configuration_manager, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, client_token, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, auto_close, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, filename, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, cursor, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, callback_client_token, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, read_buffer, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, read_stop_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, read_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, read_error_code, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, read_error_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, open_for_read_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_temporary_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_create_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_overwrite_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_truncate_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_permissions, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_bytes_queued, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_continue_flag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_queued_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_error_code, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_error_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, write_buffer, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, open_for_write_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, open_file_ID, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, opened_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, close_file_ID, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, file_closed_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, close_file_procedure, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, minimum_write_buffer_capacity, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, minimum_read_buffer_capacity, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "integer",
        "name": "minimum write buffer capacity",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "minimum read buffer capacity",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/system/file-manager/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "file manager initialisation",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "task scheduler",
        "protocol": "/system/task-scheduler/default/x64"
      },
      {
        "type": "abstraction",
        "name": "log manager",
        "protocol": "/system/log-manager/default/x64"
      },
      {
        "type": "abstraction",
        "name": "configuration manager",
        "protocol": "/system/configuration-manager/default/x64"
      },
      {
        "type": "abstraction",
        "name": "client token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "auto close",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "filename",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "cursor",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "callback client token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read buffer",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read stop flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read error code",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "read error callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "open for read procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write temporary flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write create flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write overwrite flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write truncate flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write permissions",
        "protocol": "/data/file-permissions/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write bytes queued",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write continue flag",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write queued callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write error code",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write error callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "write buffer",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "open for write procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "open file ID",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "opened callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "close file ID",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "file closed callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "close file procedure",
        "protocol": "/data/procedure/default/x64"
      }
    ],
    "macro": [
      "def (acs, minimum_write_buffer_capacity, minimum_read_buffer_capacity, self, file_manager_initialisation, task_scheduler, log_manager, configuration_manager, client_token, auto_close, filename, cursor, callback_client_token, read_buffer, read_stop_flag, read_callback_procedure, read_error_code, read_error_callback_procedure, open_for_read_procedure, write_temporary_flag, write_create_flag, write_overwrite_flag, write_truncate_flag, write_permissions, write_bytes_queued, write_continue_flag, write_queued_callback_procedure, write_error_code, write_error_callback_procedure, write_callback_procedure, write_buffer, open_for_write_procedure, open_file_ID, opened_callback_procedure, close_file_ID, file_closed_callback_procedure, close_file_procedure,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, file_manager_initialisation, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, task_scheduler, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, log_manager, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, configuration_manager, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, client_token, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, auto_close, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, filename, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, cursor, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, callback_client_token, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, read_buffer, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, read_stop_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, read_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, read_error_code, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, read_error_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, open_for_read_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_temporary_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_create_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_overwrite_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_truncate_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_permissions, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_bytes_queued, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_continue_flag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_queued_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_error_code, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_error_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, write_buffer, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, open_for_write_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, open_file_ID, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, opened_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, close_file_ID, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, file_closed_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, close_file_procedure, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, minimum_write_buffer_capacity, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, minimum_read_buffer_capacity, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
