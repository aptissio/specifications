{"name": "/system/http-server-request-parameters/default/x64",
"type": "protocol",
"policy":"0",
"description":[""],
"host": {
"requirements": [
{"name":  "http request context",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "context init",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "request context work",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "clean up",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "parameters available flag",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "non unique key value store",
"type": "abstraction",
"protocol": "/data/non-unique-key-value-store/default/x64"}
],
"obligations": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/http-server-request-parameters/default/x64"}
], 
"macro":  ["def (acs, http_request_context, context_init, request_context_work, clean_up, parameters_available_flag, non_unique_key_value_store, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, http_request_context, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, context_init, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, request_context_work, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, clean_up, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, parameters_available_flag, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, non_unique_key_value_store, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/http-server-request-parameters/default/x64"}
],
"obligations": [
{"name":  "http request context",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "context init",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "request context work",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "clean up",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "parameters available flag",
"type": "abstraction",
"protocol": "/data/flag/default/x64"},
{"name":  "non unique key value store",
"type": "abstraction",
"protocol": "/data/non-unique-key-value-store/default/x64"}
],
"macro":  ["def (acs, self, http_request_context, context_init, request_context_work, clean_up, parameters_available_flag, non_unique_key_value_store,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, http_request_context, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, context_init, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, request_context_work, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, clean_up, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, parameters_available_flag, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, non_unique_key_value_store, trigger, debug_msg)",
"}",
"end"]
}
}
