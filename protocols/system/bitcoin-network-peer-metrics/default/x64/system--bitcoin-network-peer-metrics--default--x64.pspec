{
  "type": "protocol",
  "policy": 0,
  "name": "/system/bitcoin-network-peer-metrics/default/x64",
  "description": [
    ""
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "target peer id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "metrics",
        "protocol": "/data/sorted-map/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peer id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "network address",
        "protocol": "/data/network-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "outbound",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "protocol version",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "services",
        "protocol": "/data/bit-array/default/x64"
      },
      {
        "type": "abstraction",
        "name": "user agent",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "tx network address",
        "protocol": "/data/ipv6-socket-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "rx network address",
        "protocol": "/data/ipv6-socket-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "transaction relay",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "block height",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "synced header count",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "synced block count",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "persistent",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "whitelist",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "ban score",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "ping time",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peer status",
        "protocol": "/data/bytesequence/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/system/bitcoin-network-peer-metrics/default/x64"
      }
    ],
    "macro": [
      "def(acs, target_peer_id, metrics, peer_id, network_address, outbound, protocol_version, services, user_agent, tx_network_address, rx_network_address, transaction_relay, block_height, synced_header_count, synced_block_count, persistent, whitelist, ban_score, ping_time, peer_status, bitcoin_network_peer_metrics_inout, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, bitcoin_network_peer_metrics_inout, trigger, debug_msg) -> {",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_peer_id, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, metrics, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, peer_id, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, network_address, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, outbound, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, protocol_version, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, services, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, user_agent, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, tx_network_address, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, rx_network_address, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, transaction_relay, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, block_height, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, synced_header_count, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, synced_block_count, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, persistent, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, whitelist, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, ban_score, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, ping_time, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, peer_status, trigger, debug_msg)",
      "}",
      "end "
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/system/bitcoin-network-peer-metrics/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "target peer id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "metrics",
        "protocol": "/data/sorted-map/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peer id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "network address",
        "protocol": "/data/network-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "outbound",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "protocol version",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "services",
        "protocol": "/data/bit-array/default/x64"
      },
      {
        "type": "abstraction",
        "name": "user agent",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "tx network address",
        "protocol": "/data/ipv6-socket-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "rx network address",
        "protocol": "/data/ipv6-socket-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "transaction relay",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "block height",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "synced header count",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "synced block count",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "persistent",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "whitelist",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "ban score",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "ping time",
        "protocol": "/data/unsigned-integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "peer status",
        "protocol": "/data/bytesequence/default/x64"
      }
    ],
    "macro": [
      "def(acs, bitcoin_network_peer_metrics_inout, target_peer_id, metrics, peer_id, network_address, outbound, protocol_version, services, user_agent, tx_network_address, rx_network_address, transaction_relay, block_height, synced_header_count, synced_block_count, persistent, whitelist, ban_score, ping_time, peer_status, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, bitcoin_network_peer_metrics_inout, trigger, debug_msg) -> {",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_peer_id, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, metrics, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, peer_id, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, network_address, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, outbound, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, protocol_version, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, services, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, user_agent, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, tx_network_address, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, rx_network_address, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, transaction_relay, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, block_height, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, synced_header_count, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, synced_block_count, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, persistent, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, whitelist, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, ban_score, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, ping_time, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, peer_status, trigger, debug_msg)",
      "}",
      "end "
    ]
  }
}
