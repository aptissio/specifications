{"name": "/system/http-session-context/default/x64",
"type": "protocol",
"policy":"0",
"description":["This protocol provide access to the context of the session for given http request. This protocol and procedures are only valid in the context of http server task manager. Outside of this context the functionality is undefined.","",
"The `succes flow procedure` and `failure flow procedure` are atomic to `reset session procedure` and `recall session procedure`.", ""],
"host": {
"requirements": [
{"name":  "session context",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "session context init",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "session context cleanup",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "http request exception task entry",
"type": "abstraction",
"protocol": "/system/task-entry/default/x64"},
{"name":  "success flow procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "failure flow procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "reset session procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "recall session procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"}
],
"obligations": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/http-session-context/default/x64"}
], 
"macro":  ["def (acs, session_context, session_context_init, session_context_cleanup, http_request_exception_task_entry, success_flow_procedure, failure_flow_procedure, reset_session_procedure, recall_session_procedure, self, trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/host/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, session_context, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, session_context_init, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, session_context_cleanup, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, http_request_exception_task_entry, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, success_flow_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, failure_flow_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, reset_session_procedure, trigger, debug_msg)",
"sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley(acs, $, recall_session_procedure, trigger, debug_msg)",
"}",
"end"]
},
"join": {
"requirements": [
{"name": "<self>",
"type": "abstraction",
"protocol": "/system/http-session-context/default/x64"}
],
"obligations": [
{"name":  "session context",
"type": "abstraction",
"protocol": "/data/structure/default/x64"},
{"name":  "session context init",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "session context cleanup",
"type": "abstraction",
"protocol": "/data/flow/default/x64"},
{"name":  "http request exception task entry",
"type": "abstraction",
"protocol": "/system/task-entry/default/x64"},
{"name":  "success flow procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "failure flow procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "reset session porcedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"},
{"name":  "recall session procedure",
"type": "abstraction",
"protocol": "/data/procedure/default/x64"}
],
"macro":  ["def (acs, self, session_context, session_context_init, session_context_cleanup, http_request_exception_task_entry, success_flow_procedure, failure_flow_procedure, reset_session_porcedure, recall_session_procedure,  trigger, debug_msg) :",
"sub /behaviour/add/collaboration-endpoint/join/x64@codevalley(acs, self, trigger, debug_msg) -> {",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, session_context, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, session_context_init, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, session_context_cleanup, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, http_request_exception_task_entry, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, success_flow_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, failure_flow_procedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, reset_session_porcedure, trigger, debug_msg)",
"sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley(acs, $, recall_session_procedure, trigger, debug_msg)",
"}",
"end"]
}
}
