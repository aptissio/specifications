{
  "type": "protocol",
  "policy": 0,
  "name": "/behaviour/agent-sales-manager/default/x64",
  "description": [
    "A design abstraction that provides an interface to sales-manager functions such as providing authorisations."
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "application core",
        "protocol": "/system/event-driven-application-core/default/x64"
      },
      {
        "type": "abstraction",
        "name": "sales item",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "authorisation request token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "authorisation key",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "request purchase authorisation",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "request sales authorisation",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "add success callback",
        "protocol": "/data/higher-order-procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "add failure callback",
        "protocol": "/data/higher-order-procedure/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "request token minimum",
        "minimum": "-9223372036854775808",
        "maximum": "9223372036854775807",
        "hint": "-(2^63) to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "request token maximum",
        "minimum": "-9223372036854775808",
        "maximum": "9223372036854775807",
        "hint": "-(2^63) to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "fully qualified agent name maximum length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/behaviour/agent-sales-manager/default/x64"
      }
    ],
    "macro": [
      "def (core, application_core, sales_item, authorisation_request_token, authorisation_key, request_purchase_authorisation, request_sales_authorisation, add_success_callback, add_failure_callback, request_token_minimum, request_token_maximum, fully_qualified_agent_name_maximum_length, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( core, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, application_core, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, sales_item, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, authorisation_request_token, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, authorisation_key, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, request_purchase_authorisation, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, request_sales_authorisation, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, add_success_callback, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, add_failure_callback, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/minimum/x64@codevalley( core, $, request_token_minimum, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( core, $, request_token_maximum, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( core, $, fully_qualified_agent_name_maximum_length, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "integer",
        "name": "request token minimum",
        "minimum": "-9223372036854775808",
        "maximum": "9223372036854775807",
        "hint": "-(2^63) to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "request token maximum",
        "minimum": "-9223372036854775808",
        "maximum": "9223372036854775807",
        "hint": "-(2^63) to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "fully qualified agent name maximum length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/behaviour/agent-sales-manager/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "application core",
        "protocol": "/system/event-driven-application-core/default/x64"
      },
      {
        "type": "abstraction",
        "name": "sales item",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "authorisation request token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "authorisation key",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "request purchase authorisation",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "request sales authorisation",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "add success callback",
        "protocol": "/data/higher-order-procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "add failure callback",
        "protocol": "/data/higher-order-procedure/default/x64"
      }
    ],
    "macro": [
      "def (core, request_token_minimum, request_token_maximum, fully_qualified_agent_name_maximum_length, self, application_core, sales_item, authorisation_request_token, authorisation_key, request_purchase_authorisation, request_sales_authorisation, add_success_callback, add_failure_callback,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( core, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, application_core, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, sales_item, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, authorisation_request_token, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, authorisation_key, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, request_purchase_authorisation, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, request_sales_authorisation, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, add_success_callback, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, add_failure_callback, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/minimum/x64@codevalley( core, $, request_token_minimum, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( core, $, request_token_maximum, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( core, $, fully_qualified_agent_name_maximum_length, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
