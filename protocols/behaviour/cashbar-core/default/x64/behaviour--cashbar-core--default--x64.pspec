{
  "type": "protocol",
  "policy": 0,
  "name": "/behaviour/cashbar-core/default/x64",
  "description": [
    ""
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "execution core",
        "protocol": "/system/execution-bundle/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target product bch address",
        "protocol": "/data/bitcoin-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product tree",
        "protocol": "/data/binary-search-tree/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product short name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product long name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product bch address",
        "protocol": "/data/bitcoin-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "encoded product bch address",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product price bch",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "encoded product price bch",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product price aud",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "encoded product price aud",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "reference currency (bch)",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product update notification procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product list update notification",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order token in",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order time",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order bch value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order aud value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order transaction ID",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order transaction output index",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order cb procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "create new order procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order cb token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order result",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "remove order id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "remove order procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "iterate over orders procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "stop order iteration",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each order id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each order time",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each bch value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each aud value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each product short name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each product long name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each order iterate",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify order id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify order time",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify product short name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify product long name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify bch value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify aud value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify transaction ID",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify transaction index",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify new order",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify order closed",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "http server",
        "protocol": "/behaviour/http-server/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "maximum product name length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "minimum product name length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/behaviour/cashbar-core/default/x64"
      }
    ],
    "macro": [
      "def (acs, execution_core, target_product_bch_address, product_tree, product_short_name, product_long_name, product_bch_address, encoded_product_bch_address, product_price_bch, encoded_product_price_bch, product_price_aud, encoded_product_price_aud, reference_currency__bch_, product_update_notification_procedure, product_list_update_notification, new_order_token_in, new_order_time, new_order_bch_value, new_order_aud_value, new_order_transaction_ID, new_order_transaction_output_index, new_order_cb_procedure, create_new_order_procedure, new_order_cb_token_, new_order_result, new_order_id, remove_order_id, remove_order_procedure, iterate_over_orders_procedure, stop_order_iteration, each_order_id, each_order_time, each_bch_value, each_aud_value, each_product_short_name_, each_product_long_name_, each_order_iterate_, notify_order_id, notify_order_time, notify_product_short_name, notify_product_long_name, notify_bch_value, notify_aud_value, notify_transaction_ID, notify_transaction_index, notify_new_order, notify_order_closed, http_server, maximum_product_name_length, minimum_product_name_length, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, execution_core, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, target_product_bch_address, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, product_tree, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, product_short_name, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, product_long_name, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, product_bch_address, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, encoded_product_bch_address, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, product_price_bch, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, encoded_product_price_bch, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, product_price_aud, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, encoded_product_price_aud, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, reference_currency__bch_, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, product_update_notification_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, product_list_update_notification, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_token_in, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_time, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_bch_value, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_aud_value, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_transaction_ID, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_transaction_output_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_cb_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, create_new_order_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_cb_token_, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_result, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, new_order_id, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, remove_order_id, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, remove_order_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, iterate_over_orders_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, stop_order_iteration, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, each_order_id, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, each_order_time, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, each_bch_value, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, each_aud_value, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, each_product_short_name_, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, each_product_long_name_, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, each_order_iterate_, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_order_id, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_order_time, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_product_short_name, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_product_long_name, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_bch_value, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_aud_value, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_transaction_ID, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_transaction_index, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_new_order, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, notify_order_closed, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, http_server, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, maximum_product_name_length, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( acs, $, minimum_product_name_length, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "integer",
        "name": "maximum product name length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "integer",
        "name": "minimum product name length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/behaviour/cashbar-core/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "execution core",
        "protocol": "/system/execution-bundle/default/x64"
      },
      {
        "type": "abstraction",
        "name": "target product bch address",
        "protocol": "/data/bitcoin-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product tree",
        "protocol": "/data/binary-search-tree/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product short name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product long name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product bch address",
        "protocol": "/data/bitcoin-address/default/x64"
      },
      {
        "type": "abstraction",
        "name": "encoded product bch address",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product price bch",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "encoded product price bch",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product price aud",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "encoded product price aud",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "reference currency (bch)",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product update notification procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "product list update notification",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order token in",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order time",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order bch value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order aud value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order transaction ID",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order transaction output index",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order cb procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "create new order procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order cb token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order result",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "new order id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "remove order id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "remove order procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "iterate over orders procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "stop order iteration",
        "protocol": "/data/flag/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each order id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each order time",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each bch value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each aud value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each product short name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each product long name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "each order iterate",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify order id",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify order time",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify product short name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify product long name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify bch value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify aud value",
        "protocol": "/data/currency-value/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify transaction ID",
        "protocol": "/data/bytes/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify transaction index",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify new order",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "notify order closed",
        "protocol": "/data/flow/default/x64"
      },
      {
        "type": "abstraction",
        "name": "http server",
        "protocol": "/behaviour/http-server/default/x64"
      }
    ],
    "macro": [
      "def (acs, maximum_product_name_length, minimum_product_name_length, self, execution_core, target_product_bch_address, product_tree, product_short_name, product_long_name, product_bch_address, encoded_product_bch_address, product_price_bch, encoded_product_price_bch, product_price_aud, encoded_product_price_aud, reference_currency__bch_, product_update_notification_procedure, product_list_update_notification, new_order_token_in, new_order_time, new_order_bch_value, new_order_aud_value, new_order_transaction_ID, new_order_transaction_output_index, new_order_cb_procedure, create_new_order_procedure, new_order_cb_token_, new_order_result, new_order_id, remove_order_id, remove_order_procedure, iterate_over_orders_procedure, stop_order_iteration, each_order_id, each_order_time, each_bch_value, each_aud_value, each_product_short_name_, each_product_long_name_, each_order_iterate_, notify_order_id, notify_order_time, notify_product_short_name, notify_product_long_name, notify_bch_value, notify_aud_value, notify_transaction_ID, notify_transaction_index, notify_new_order, notify_order_closed, http_server,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, self, trigger, debug_msg) -> {",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, execution_core, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, target_product_bch_address, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, product_tree, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, product_short_name, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, product_long_name, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, product_bch_address, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, encoded_product_bch_address, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, product_price_bch, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, encoded_product_price_bch, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, product_price_aud, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, encoded_product_price_aud, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, reference_currency__bch_, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, product_update_notification_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, product_list_update_notification, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_token_in, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_time, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_bch_value, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_aud_value, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_transaction_ID, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_transaction_output_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_cb_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, create_new_order_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_cb_token_, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_result, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, new_order_id, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, remove_order_id, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, remove_order_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, iterate_over_orders_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, stop_order_iteration, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, each_order_id, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, each_order_time, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, each_bch_value, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, each_aud_value, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, each_product_short_name_, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, each_product_long_name_, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, each_order_iterate_, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_order_id, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_order_time, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_product_short_name, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_product_long_name, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_bch_value, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_aud_value, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_transaction_ID, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_transaction_index, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_new_order, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, notify_order_closed, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, http_server, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, maximum_product_name_length, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( acs, $, minimum_product_name_length, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
