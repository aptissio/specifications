{
  "type": "protocol",
  "policy": 0,
  "name": "/behaviour/agent-sales-catalogue/default/x64",
  "description": [
    "Design an agent sales catalogue with price tag lookup feature."
  ],
  "host": {
    "requirements": [
      {
        "type": "integer",
        "name": "maximum price tag length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "agent name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup agent price tag",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup callback token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup result code",
        "protocol": "/data/integer/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "maximum agent name length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/behaviour/agent-sales-catalogue/default/x64"
      }
    ],
    "macro": [
      "def (core, maximum_price_tag_length, agent_name, lookup_token, lookup_callback_procedure, lookup_procedure, lookup_agent_price_tag, lookup_callback_token, lookup_result_code, maximum_agent_name_length, self, trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( core, self, trigger, debug_msg) -> {",
      "sub /behaviour/dictate/agent-integer/default/x64@codevalley( core, $, maximum_price_tag_length, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, agent_name, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, lookup_token, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, lookup_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, lookup_procedure, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, lookup_agent_price_tag, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, lookup_callback_token, trigger, debug_msg)",
      "sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( core, $, lookup_result_code, trigger, debug_msg)",
      "sub /behaviour/collect/agent-integer/maximum/x64@codevalley( core, $, maximum_agent_name_length, trigger, debug_msg)",
      "}",
      "end"
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "integer",
        "name": "maximum agent name length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "COLLABORATION",
        "protocol": "/behaviour/agent-sales-catalogue/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "integer",
        "name": "maximum price tag length",
        "minimum": "0",
        "maximum": "9223372036854775807",
        "hint": "0 to (2^63)-1"
      },
      {
        "type": "abstraction",
        "name": "agent name",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup callback procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup agent price tag",
        "protocol": "/data/bytesequence/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup callback token",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "lookup result code",
        "protocol": "/data/integer/default/x64"
      }
    ],
    "macro": [
      "def (core, maximum_agent_name_length, self, maximum_price_tag_length, agent_name, lookup_token, lookup_callback_procedure, lookup_procedure, lookup_agent_price_tag, lookup_callback_token, lookup_result_code,  trigger, debug_msg) :",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( core, self, trigger, debug_msg) -> {",
      "sub /behaviour/accept/agent-integer/default/x64@codevalley( core, $, maximum_price_tag_length, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, agent_name, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, lookup_token, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, lookup_callback_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, lookup_procedure, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, lookup_agent_price_tag, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, lookup_callback_token, trigger, debug_msg)",
      "sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( core, $, lookup_result_code, trigger, debug_msg)",
      "sub /behaviour/fold/agent-integer/maximum/x64@codevalley( core, $, maximum_agent_name_length, trigger, debug_msg)",
      "}",
      "end"
    ]
  }
}
