{
  "type": "protocol",
  "policy": 0,
  "name": "/behaviour/counter/default/x64",
  "description": [
    ""
  ],
  "host": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "counter value",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "reset procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "increment procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "decrement procedure",
        "protocol": "/data/procedure/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/behaviour/counter/default/x64"
      }
    ],
    "macro": [
      "def(acs, counter_value, reset_procedure, increment_procedure, decrement_procedure, counter_inout, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/host/x64@codevalley( acs, counter_inout, trigger, debug_msg) -> {",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, counter_value, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, reset_procedure, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, increment_procedure, trigger, debug_msg)",
      " sub /behaviour/collect-and-distribute/agent-group/default/x64@codevalley( acs, $, decrement_procedure, trigger, debug_msg)",
      "  }",
      "end "
    ]
  },
  "join": {
    "requirements": [
      {
        "type": "abstraction",
        "name": "<self>",
        "protocol": "/behaviour/counter/default/x64"
      }
    ],
    "obligations": [
      {
        "type": "abstraction",
        "name": "counter value",
        "protocol": "/data/integer/default/x64"
      },
      {
        "type": "abstraction",
        "name": "reset procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "increment procedure",
        "protocol": "/data/procedure/default/x64"
      },
      {
        "type": "abstraction",
        "name": "decrement procedure",
        "protocol": "/data/procedure/default/x64"
      }
    ],
    "macro": [
      "def(acs, counter_inout, counter_value, reset_procedure, increment_procedure, decrement_procedure, trigger, debug_msg):",
      "sub /behaviour/add/collaboration-endpoint/join/x64@codevalley( acs, counter_inout, trigger, debug_msg) -> {",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, counter_value, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, reset_procedure, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, increment_procedure, trigger, debug_msg)",
      " sub /behaviour/fold-and-allocate/agent-group/default/x64@codevalley( acs, $, decrement_procedure, trigger, debug_msg)",
      "  }",
      "end "
    ]
  }
}
